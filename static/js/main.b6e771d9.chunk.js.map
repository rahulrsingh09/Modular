{"version":3,"sources":["reportWebVitals.ts","api.ts","Components/Emoji/Emoji.styled.tsx","Components/Emoji/Emoji.tsx","Components/Trigger/Trigger.styled.tsx","Components/Tooltip/Tootip.styled.tsx","Components/Trigger/Trigger.tsx","Containers/AppComponent.styled.tsx","Components/Tabs/Tabs.tsx","Components/Summary/Summary.styled.tsx","Components/Summary/Summary.tsx","Components/Spinner/Spinner.styled.tsx","Containers/AppContainer.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","axios","create","baseURL","Span","styled","span","props","customPadding","preventHover","Emoji","role","aria-label","name","aria-hidden","emoji","id","defaultProps","React","memo","Div","div","ToolTipText","visibility","width","display","alignItems","backgroundColor","padding","color","textAlign","borderRadius","position","zIndex","bottom","left","marginLeft","content","top","borderWidth","borderStyle","borderColor","ToolTip","Trigger","reactions","map","reaction","Tabs","Tab","button","active","Content","SmallCircle","Text","TabHeader","height","TabHeaderContainer","SummaryHeader","DetailsComponent","SummaryComponent","state","activeTabIndex","getTabs","index","onClick","tabClickHandler","reactionMapCount","get","getTabContent","setState","this","rotate360","keyframes","Spinner","AppContainer","users","userContentReactions","_reactionMapCount","Map","Promise","all","API","data","length","forEach","userReaction","countOfReactions","reaction_id","set","console","log","Summary","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6e771d9.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\n\nexport const REACTIONS_REQUEST = 'reactions';\nexport const USER_CONTENT_REACTIONS = '/user_content_reactions ';\nexport const USERS = '/users ';\n\nexport default axios.create({\n    baseURL: `https://artful-iudex.herokuapp.com/`\n});","import styled from \"styled-components\";\n\n\nconst Span = styled.span<{preventHover: boolean, customPadding: string}>`\n  padding: ${(props) => props.customPadding ? props.customPadding: null};\n  display: inline-block;\n  transition: transform .2s;\n  cursor: pointer; \n  ${(props) => !props.preventHover && `&:hover{\n    transform: scale(2);\n    position: relative;\n    bottom: 8px;\n}`}\n`\n\nexport {Span}","import React from 'react';\nimport {IReaction} from \"../../Types/reactions.types\";\nimport {Span} from \"./Emoji.styled\";\n\nexport interface IEmoji extends IReaction{\n    preventHover: boolean;\n    customPadding: string;\n}\n\nconst Emoji = (props: IEmoji) => (\n    <Span\n        customPadding={props.customPadding}\n        preventHover={props.preventHover}\n        role=\"img\"\n        aria-label={props.name ? props.name : \"\"}\n        aria-hidden={props.name ? \"false\" : \"true\"}\n        key={props.id}\n    >\n        {props.emoji}\n    </Span>\n);\n\nEmoji.defaultProps ={\n    preventHover: false,\n    customPadding:'2px 8px 4px 8px'\n}\nexport default React.memo(Emoji);","import styled from \"styled-components\";\n\n\nconst Div = styled.div`\n  padding: 0px 12px;\n  display: flex;\n  box-sizing: border-box;\n  -webkit-box-shadow: 3px 0px 35px -8px rgba(0,0,0,0.24);\n  -moz-box-shadow: 3px 0px 35px -8px rgba(0,0,0,0.24);\n  box-shadow: 3px 0px 35px -8px rgba(0,0,0,0.24);\n  border-radius: 24px;\n  width: min-content;\n  height: min-content;\n`\n\nexport {Div}","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ToolTipText = styled(\"span\")({\n    visibility: \"hidden\",\n    width: \"60px\",\n    display:\"grid\",\n    alignItems:\"center\",\n    backgroundColor: \"#161616\",\n    padding: \"12px 16px\",\n    color: \"#fff\",\n    textAlign: \"center\",\n    borderRadius: \"2px\",\n    position: \"absolute\",\n    zIndex: 1,\n    bottom: \"150%\",\n    left: \"50%\",\n    marginLeft: \"-45px\",\n    \":after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        top: \"100%\",\n        left: \"50%\",\n        marginLeft: \"-5px\",\n        borderWidth: \"5px\",\n        borderStyle: \"solid\",\n        borderColor: \"#161616 transparent transparent transparent\"\n    }\n});\n\nconst ToolTip = styled(\"div\")({\n    position: \"relative\",\n    display: \"inline-block\",\n    \":hover span\": {\n        visibility: \"visible\"\n    }\n});\n\nexport {ToolTip, ToolTipText}\n","import * as React from 'react';\nimport {IReactions} from \"../../Types/reactions.types\";\nimport Emoji from \"../Emoji/Emoji\";\nimport {Div} from \"./Trigger.styled\";\nimport {ToolTip, ToolTipText} from \"../Tooltip/Tootip.styled\";\n\ninterface ITriggerProps extends IReactions{\n}\n\nconst Trigger = (props: ITriggerProps) => {\n\n   const getEmojisList = (): React.ReactElement => {\n      const list = <React.Fragment>\n         {props.reactions.map(reaction =>\n             <ToolTip>\n                <Emoji id={reaction.id} name={reaction.name} emoji={reaction.emoji} key={reaction.id}/>\n                <ToolTipText>\n                   {reaction.name}\n                </ToolTipText>\n             </ToolTip>\n             )}\n      </React.Fragment>\n      return list\n   }\n\n   return (\n       <Div>\n          {getEmojisList()}\n       </Div>\n   )\n}\n\nexport default React.memo(Trigger)","import styled from \"styled-components\";\n\n\nconst Div = styled.div`\n    width: 100%;\n    height: 100%;\n    display: grid;\n    place-items: center;\n`\n\n\nexport {Div}","import styled from \"styled-components\";\n\nexport const Tabs = styled.div`\n  height: 40px;\n`;\n\nexport const Tab = styled.button<{active: boolean}>`\n  border-style: none;\n  background-color: #fff;\n  padding: 0 16px;\n  outline: none;\n  height: 40px;\n  cursor: pointer;\n  position: relative;\n  font-size: 14px;\n  border-bottom:  ${props => (props.active ? \"2px solid #0f62fe\" : \"2px solid rgba(0,0,0,0.24)\")};\n\n`;\n\nexport const Content = styled.div<{active: boolean}>`\n  ${props => (props.active ? \"\" : \"display:none\")}\n`;\n","import styled from \"styled-components\";\n\nconst Div = styled.div`\n    width: max-content;\n    -webkit-box-shadow: 3px 0px 35px -8px rgba(0,0,0,0.24);\n    -moz-box-shadow: 3px 0px 35px -8px rgba(0,0,0,0.24);\n    box-shadow: 3px 0px 35px -8px rgba(0,0,0,0.24);\n`\n\nconst SmallCircle = styled.span`\n  width: 4px;\n  display: inline-block;\n  height: 4px;\n  border-radius: 50%;\n  background-color: black;\n`\n\nconst Text = styled.span`\n  padding-left: 8px;\n`\nconst TabHeader = styled.div<{height?: string}>`\n display: flex;\n justify-content: center;\n align-items: center;\n height: ${(props) => props.height};\n`\n\nconst TabHeaderContainer = styled.div`\n  width: max-content;\n  height: max-content;\n`\n\nconst SummaryHeader = styled.div`\n  font-weight: bold;\n  padding: 24px 16px 16px 16px;\n`\n\nconst DetailsComponent = styled.div`\n  display: flex;\n  height: 300px;\n  width: 100%;\n  justify-content: center;\n  align-items: center;  \n`\n\nexport {Div, SmallCircle, Text, TabHeader, TabHeaderContainer,SummaryHeader, DetailsComponent}","import * as React from 'react';\nimport {IUserContentReaction} from \"../../Types/userContent.types\";\nimport {IReaction} from \"../../Types/reactions.types\";\nimport {Content, Tab, Tabs} from \"../Tabs/Tabs\";\nimport {IUser} from \"../../Types/user.types\";\nimport Emoji from \"../Emoji/Emoji\";\nimport {DetailsComponent, Div, SmallCircle, SummaryHeader, TabHeader, TabHeaderContainer, Text} from \"./Summary.styled\";\n\n\n\ninterface ISummaryComponentProps {\n    users: Array<IUser>;\n    userContentReactions: Array<IUserContentReaction>;\n    reactions: Array<IReaction>;\n    reactionMapCount: Map<number,number>\n}\n\ninterface ISummaryComponentState{\n    activeTabIndex: number;\n}\n\nclass SummaryComponent extends React.PureComponent<ISummaryComponentProps, ISummaryComponentState> {\n    state:ISummaryComponentState = {\n        activeTabIndex: 999\n    }\n\n    getTabs = () => {\n        const Tabs = this.props.reactions.map((reaction, index) => {\n            return (\n                <Tab onClick={() => this.tabClickHandler(index)} active={this.state.activeTabIndex === index}>\n                    <TabHeader>\n                        <Emoji emoji={reaction.emoji} name={reaction.name}\n                               id={reaction.id} key={reaction.id} preventHover={true}\n                               customPadding={'2px 8px 4px 0px'}/>\n                        <SmallCircle/>\n                        <Text>{this.props.reactionMapCount.get(reaction.id)}</Text>\n                    </TabHeader>\n                </Tab>\n            )\n        })\n        return Tabs;\n    }\n\n    getTabContent = () => {\n        const TabContent = this.props.reactions.map((reaction, index) => {\n            return (\n                <Content active={this.state.activeTabIndex === index}>\n                    <h1>{reaction.name}</h1>\n                </Content>\n            )\n        })\n        return TabContent;\n    }\n\n    tabClickHandler = (index:number) => {\n        if (index !== this.state.activeTabIndex) {\n            this.setState({activeTabIndex: index});\n        }\n    };\n\n\n\n    render() {\n        return (\n            <Div>\n                <SummaryHeader>Reactions</SummaryHeader>\n                <TabHeaderContainer>\n                    <Tabs>\n                        <Tab onClick={() => this.tabClickHandler(999)} active={this.state.activeTabIndex === 999}>\n                            <TabHeader height='39px'>\n                                All\n                            </TabHeader>\n                        </Tab>\n                        {this.getTabs()}\n                    </Tabs>\n                </TabHeaderContainer>\n                <DetailsComponent>\n                    <Content active={this.state.activeTabIndex === 999}>\n                        <h1>ALL</h1>\n                    </Content>\n                    {this.getTabContent()}\n                </DetailsComponent>\n            </Div>\n        );\n    }\n\n}\n\nexport default SummaryComponent;","import styled, { keyframes } from \"styled-components\";\n\nconst rotate360 = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Spinner = styled.div`\n  animation: ${rotate360} 1s linear infinite;\n  transform: translateZ(0);\n  \n  border-top: 2px solid grey;\n  border-right: 2px solid grey;\n  border-bottom: 2px solid grey;\n  border-left: 4px solid black;\n  background: transparent;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n`;\n\nexport default Spinner;","import * as React from 'react';\nimport API, {REACTIONS_REQUEST, USER_CONTENT_REACTIONS, USERS} from \"../api\";\nimport {IReaction, IReactions} from \"../Types/reactions.types\";\nimport Trigger from \"../Components/Trigger/Trigger\";\nimport {Div} from \"./AppComponent.styled\";\nimport {IUser} from \"../Types/user.types\";\nimport {IUserContentReaction} from \"../Types/userContent.types\";\nimport SummaryComponent from \"../Components/Summary/Summary\";\nimport Spinner from \"../Components/Spinner/Spinner.styled\";\n\n\ninterface IAppComponentProps {\n\n}\n\ninterface IAppComponentState extends IReactions{\n    activeTabIndex: number;\n    users: Array<IUser>;\n    userContentReactions: Array<IUserContentReaction>;\n}\n\nclass AppContainer extends React.PureComponent<IAppComponentProps, IAppComponentState> {\n    state:IAppComponentState = {\n        reactions: [],\n        users: [],\n        userContentReactions: [],\n        activeTabIndex: 0\n    }\n    _reactionMapCount: Map<number,number> = new Map<number, number>()\n    async componentDidMount() {\n        try{\n            const [reactions, users, userContentReactions] = await Promise.all([\n                API.get(REACTIONS_REQUEST),\n                API.get(USERS),\n                API.get(USER_CONTENT_REACTIONS)\n            ]);\n            if(reactions.data && reactions.data.length) this.setState({\n                reactions: reactions.data as Array<IReaction>\n            })\n            if(users.data && users.data.length) this.setState({\n                users: users.data as Array<IUser>\n            })\n            if(userContentReactions.data && userContentReactions.data.length){\n                userContentReactions.data.forEach((userReaction: IUserContentReaction) => {\n                    const countOfReactions = this._reactionMapCount.get(userReaction.reaction_id);\n                    this._reactionMapCount.set(userReaction.reaction_id, countOfReactions ? countOfReactions + 1 : 1)\n                    }\n                )\n                this.setState({\n                    userContentReactions: userContentReactions.data as Array<IUserContentReaction>\n                })\n            }\n\n        }catch(error){\n            console.log(error);\n        }\n    }\n\n\n\n    render() {\n        const renderedView = (\n            this.state.userContentReactions.length ? (\n                <Div>\n                    <Trigger reactions={this.state.reactions}/>\n                    <SummaryComponent users={this.state.users} userContentReactions={this.state.userContentReactions} reactions={this.state.reactions} reactionMapCount={this._reactionMapCount}/>\n                </Div>\n            ) : <Spinner/>\n        )\n        return renderedView;\n    }\n\n}\n\nexport default AppContainer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport AppContainer from \"./Containers/AppContainer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContainer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}